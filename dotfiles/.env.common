
### vim:set ft=sh: ###

if which vim >/dev/null 2>&1; then
    export EDITOR="$(which vim)"
elif which vi >/dev/null 2>&1; then
    export EDITOR="$(which vi)"
fi
export LESS="--LONG-PROMPT --RAW-CONTROL-CHARS --quit-if-one-screen --no-init"
export PAGER=less


# dircolors
if which dircolors >/dev/null 2>&1; then
    eval `dircolors`
else
    export LS_COLORS='di=36:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
fi


# for cygwin
if [ "$MY_CURRENT_ENV" = "cygwin" ]; then
    export LESS="MrXEd --dumb"
    export TERM=cygwin
    export CFLAGS="-I/usr/local/include -I/usr/include"
    export LANG=ja_JP.SJIS
fi

# $PATH
if [ -z "$MY_ORG_PATH" ]; then
    # original $PATH
    MY_ORG_PATH="$PATH"
fi
export PATH="$MY_ORG_PATH"
[ -d "$HOME/bin.d" ] && for i in `ls -d $HOME/bin.d/* | sort`; do
    export PATH="$i:$PATH"
done
[ -d "$HOME/bin.d.local" ] && for i in `ls -d $HOME/bin.d.local/* | sort`; do
    export PATH="$i:$PATH"
done
export PATH="$PATH:/usr/local/bin:$HOME/bin"
[ -d /var/lib/gems/1.8/bin ] && export PATH="$PATH:/var/lib/gems/1.8/bin"
[ -d /var/lib/gems/1.9/bin ] && export PATH="$PATH:/var/lib/gems/1.9/bin"

# # $PKG_CONFIG_PATH
# if [ -z "$MY_ORG_PKG_CONFIG_PATH" ]; then
#     # original $PKG_CONFIG_PATH
#     MY_ORG_PKG_CONFIG_PATH="$PKG_CONFIG_PATH"
# fi
# export PKG_CONFIG_PATH="$MY_ORG_PKG_CONFIG_PATH"
# [ -d "$HOME/pkgconfig.d" ] && for i in `ls -d $HOME/pkgconfig.d/* | sort`; do
#     export PKG_CONFIG_PATH="$i:$PKG_CONFIG_PATH"
# done

if [ "$LD_LIBRARY_PATH" ]; then
    export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
else
    export LD_LIBRARY_PATH="/usr/local/lib"
fi
# # $LD_LIBRARY_PATH
# if [ -z "$MY_ORG_LD_LIBRARY_PATH" ]; then
#     # original $LD_LIBRARY_PATH
#     MY_ORG_LD_LIBRARY_PATH="$LD_LIBRARY_PATH"
# fi
# export LD_LIBRARY_PATH="$MY_ORG_LD_LIBRARY_PATH"
# [ -d "$HOME/lib.d" ] && for i in `ls -d $HOME/lib.d/* | sort`; do
#     export LD_LIBRARY_PATH="$i:$LD_LIBRARY_PATH"
# done


# local::lib
# LOCAL_LIB_DIR="$HOME/local/perl5"    # base dir
# eval `perl -I$LOCAL_LIB_DIR/lib/perl5 -Mlocal::lib=$LOCAL_LIB_DIR 2>/dev/null`
# if [ $# -eq 0 ]; then
#     if [ -z "$PERL5LIB" ]; then
#         export PERL5LIB="$LOCAL_LIB_DIR/lib/perl5/site_perl"
#     else
#         export PERL5LIB="$PERL5LIB:$LOCAL_LIB_DIR/lib/perl5/site_perl"
#     fi
#     export PKG_DBDIR="$LOCAL_LIB_DIR/var/db/pkg"
#     export PORT_DBDIR="$LOCAL_LIB_DIR/var/db/pkg"
#     export INSTALL_AS_USER
#     if [ -z "$LD_LIBRARY_PATH" ]; then
#         export LD_LIBRARY_PATH="$LOCAL_LIB_DIR/lib"
#     else
#         export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$LOCAL_LIB_DIR/lib"
#     fi
#     mkdir -p $LOCAL_LIB_DIR/var/db/pkg
# else
#     echo "error: local::lib isn't installed." >&2
# fi


# perlbrew
export PERLBREW_ROOT="$HOME/local/perlbrew"
export PATH="$PERLBREW_ROOT/bin:$PERLBREW_ROOT/perls/current/bin:$PATH"
[ -f $PERLBREW_ROOT/etc/bashrc ] && source $PERLBREW_ROOT/etc/bashrc


# dotto
export DOTTORC="$HOME/git/dotfiles/dotfiles.pl"


# rvm
# [ -f "$HOME/.rvm/scripts/rvm" -a -s "$HOME/.rvm/scripts/rvm" ] && . "$HOME/.rvm/scripts/rvm"


# rubies
# [ -e "$HOME/.rubies/src/rubies.sh" ] && source "$HOME/.rubies/src/rubies.sh"


# rbenv
if [ -x "`which rbenv`" ]; then
    export PATH="$HOME/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
fi


# vim-version-manager
test -f ~/.vvm/etc/login && source ~/.vvm/etc/login


# local
if [ -e "$HOME/.env.local" ]; then
    source "$HOME/.env.local"
fi
