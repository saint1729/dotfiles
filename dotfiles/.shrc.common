
### vim:set ft=sh: ###



# alias
alias cp='cp -i'
alias mv='mv -i'
alias df='df -h'
alias diff='diff -u'
alias du='du -h'
alias free='free -l'
alias j='jobs'
alias jobs='jobs -l'
alias l.='ls -d .*'
alias l='ll'
alias la='ls -A'
alias less='less -r'
alias ll='ls -lh'
alias go='gopen'
alias tmux='tmux -u -2'
# http://techno-st.net/2009/06/06/bash-zsh-alias-sudo.html
alias sudo='sudo'
alias wget-mirror='wget -w 1 -m -k -np -r'
alias crontab='crontab -i'

if which vim >/dev/null 2>&1; then
    alias vi="vim -u NONE -i NONE -N"
    alias vim-noplugin='vim -u NONE -i NONE -N'
fi
alias lingr="vim --cmd 'let g:lingr = 1' -c LingrLaunch"
alias chalice="vim --cmd 'let g:chalice = 1' -c Chalice"
alias vimshell="vim -c VimShell"
alias hateda="vim --cmd 'let g:hateda = 1' -c HatenaEdit"

which trash-put >/dev/null 2>&1 && alias rm='trash-put'
if which screen >/dev/null 2>&1; then
    alias sc="screen"
    alias screen="screen -R"
fi
which perldocjp >/dev/null 2>&1 && alias perldoc='perldocjp'

if [ "$MY_CURRENT_ENV" = "cygwin" ]; then
    alias less='less -r'
    alias ls='ls --color=tty --show-control-chars'
elif [  "$MY_CURRENT_ENV" = 'freebsd' ]; then
    # BSD ls cannot handle --long-option?
    alias ls='ls -G'
else
    alias ls='ls --color=tty'
fi

if [ -x "/usr/local/share/vim/vim72/macros/less.sh" ]; then
    alias vless="/usr/local/share/vim/vim72/macros/less.sh"
elif [ -x "/usr/share/vim/vim72/macros/less.sh" ]; then
    alias vless="/usr/share/vim/vim72/macros/less.sh"
fi

alias freemem='free && sync && echo 3 > /proc/sys/vm/drop_caches && free'
alias cpam=cpanm
alias gopen=gnome-open
if ! which pit >/dev/null && which ppit >/dev/null; then
    alias pit=ppit
fi



# util commands
function mkcd() {
    [ $# != 0 ] && mkdir "$1" && cd "$1"
}
function viwi() {
    local p
    [ $# != 0 ] && p=`which $1` && vi "$p"
}
function locallib() {
    local INSTALL_BASE
    INSTALL_BASE=$1
    if [ -d $INSTALL_BASE ]; then
        eval $(use-locallib $INSTALL_BASE)
    fi
}
function fatmen() {
    local n=30
    [ $# != 0 ] && n="$1"
    ps aux --sort=-rss | head -"$n"
}
if [ -x "`which column`" ]; then
function mount() {
    if [ $# -eq 0 ]; then
        command mount | column -t
    else
        command mount "$@"
    fi
}
fi
function rdesk() {
    if [ $# -eq 0 ]; then
        echo 'Usage: rdesk hostname [user [password]]' >&2
    fi

    hostname="$1"
    user="$2"
    password="$3"

    [ "$user"     ] && user="-u $user"
    [ "$password" ] && password="-p $password"

    #rdesktop $user $password -a 24 -f -r sound -x l -z "$hostname"
    rdesktop $user $password -a 24 -r sound -x l -z "$hostname"
}


# perlbrew
[ -f $HOME/local/perlbrew/etc/bashrc ] && source $HOME/local/perlbrew/etc/bashrc


# Do not stop screen.
# http://d.hatena.ne.jp/hogem/20090411/1239451878
stty stop undef
